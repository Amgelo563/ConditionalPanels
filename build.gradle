plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.0"
}

group = 'me.amgelo563'
version = '1.0'

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }

    maven {
        name = "spigot-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "CodeMC"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        name "papermc"
        url "https://papermc.io/repo/repository/maven-public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT"
    compileOnly "com.github.Ajneb97:ConditionalEvents:4.54.1"
    compileOnly "com.github.rockyhawk64:CommandPanels:724d503"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks {
    runServer {
        minecraftVersion("1.20.4")

        downloadPlugins {
            modrinth("conditionalevents", "4.54.1")
            github("rockyhawk64", "CommandPanels", "3.21.3.1", "CommandPanels.jar")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
